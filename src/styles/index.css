@import url("https://fonts.googleapis.com/css2?family=Assistant:wght@400;600;800&display=swap");

:root {
  --font: "Assistant", sans-serif;

  --clr-bgk: hsl(0, 0%, 99%);
  --clr-text-h: hsl(0, 0%, 20%);
  --clr-text-h-hover: hsl(0, 0%, 10%);
  --clr-text-base: hsl(0, 0%, 44%);
  --clr-text-base-hover: hsl(0, 0%, 10%);
  --clr-bgk-base: hsl(0, 0%, 90%);
  --clr-bgk-base-hover: hsl(0, 0%, 94%);

  --border-radius-comp: 0.3rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --clr-bgk: hsl(0, 0%, 9%);
    --clr-text-h: hsl(0, 0%, 90%);
    --clr-text-h-hover: hsl(0, 0%, 70%);
    --clr-text-base: hsl(0, 0%, 74%);
    --clr-text-base-hover: hsl(0, 0%, 90%);
    --clr-bgk-base: hsl(0, 0%, 3%);
    --clr-bgk-base-hover: hsl(0, 0%, 15%);
  }
}

html {
  box-sizing: border-box;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  color-scheme: dark light;
}
*,
*::before,
*::after {
  box-sizing: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  margin: 0;
  padding: 0;
}
body {
  line-height: 1.25;
  font-family: var(--font);
}
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
input,
button,
textarea,
select {
  font: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--clr-text-h);
  text-wrap: balance;
}

p,
a,
span {
  color: var(--clr-text-base);
}

a {
  text-decoration: none;
}

ul {
  list-style-type: none;
}

.page__wrapper {
  --web-width: 70em;
  background-color: var(--clr-bgk);
  min-height: 100dvh;
}

.header {
  padding: 1.3rem;
  box-shadow: 0 1.3rem 1.5rem var(--clr-bgk-base);
}

.header__nav,
.header__links {
  display: flex;
  align-items: center;
  width: min(100%, var(--web-width));
  margin: 0 auto;
}

.header__nav {
  justify-content: space-between;
}

.header__links {
  --_gap: 1rem;

  & li {
    position: relative;
    padding-inline: calc(var(--_gap) / 2);
  }

  & li::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -1rem;
    height: 3px;
    width: 100%;
    background-color: lightblue;
    transition: scale 240ms ease;

    scale: 0 1;
  }

  & li:hover::after {
    scale: 1 1;
  }

  & a {
    text-transform: capitalize;
    padding: 0.8rem;
    font-weight: 600;
  }

  & a:hover {
    color: var(--clr-text-base-hover);
  }
}

.main {
  width: min(100%, calc(var(--web-width) / 1.5));
  margin: 9vh auto;
}

.main__form {
  width: 100%;
  display: flex;
  gap: 0.5rem;

  & input {
    width: 100%;
    padding: 1rem;
    color: var(--clr-text-h);
    background-color: var(--clr-bgk);
    /* border: 1.5px solid var(--clr-bgk-base); */
    border: transparent;
    border-radius: var(--border-radius-comp);
    outline: 1px solid var(--clr-bgk-base);
    outline-offset: 1px;
    transition: outline-offset 140ms linear;
  }

  & input:focus {
    outline: 1px solid var(--clr-text-base);
    outline-offset: 3px;
  }

  & button {
    padding: 0.5rem;
    cursor: pointer;
    color: var(--clr-text-base);
    text-transform: capitalize;
    border: none;
    background-color: var(--clr-bgk);
    border-radius: var(--border-radius-comp);
  }

  & button:hover {
    color: var(--clr-text-base-hover);
    background-color: var(--clr-bgk-base-hover);
  }
}

.main__links {
  margin-block: 1rem;
  display: flex;
  flex-flow: column;
}

.main__link {
  opacity: 0;
  transform: translateY(-100%);
}

.main__link[aria-hidden="false"] {
  opacity: 1;
  transform: translateY(0);
}

.main__link {
  --_gap: 1rem;

  transition: transform 240ms ease-in-out, opacity 440ms ease-in-out;
  & a {
    overflow: hidden;
    padding: var(--_gap);
    isolation: isolate;
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: var(--border-radius-comp);
    background-color: var(--clr-bgk);
    & div {
      align-items: center;
      display: flex;
      gap: calc(var(--_gap) / 2);
    }
    & h3 {
      font-weight: 600;
    }
  }
}

.main__links li a::after {
  z-index: -1;
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background-color: var(--clr-bgk-base-hover);
  transition: opacity 100ms,
    transform 150ms var(--_transition-delay, 0ms) ease-in-out;
  transform: translateY(var(--_translate, 0));
  opacity: var(--_opacity, 0);
}

.main__links li:hover + li a {
  --_translate: -100%;
  --_transition-delay: 100ms;
}
.main__links li:has(+ :hover) a {
  --_translate: 100%;
  --_transition-delay: 100ms;
}

.main__links li a:hover,
.main__links li:focus-within {
  --_width: 1;
  --_opacity: 1;
}

.added {
}
